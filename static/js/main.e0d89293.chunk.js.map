{"version":3,"sources":["components/Characters/SomeCharacter/SomeCharacter.js","Redux/types.js","Redux/actions/add-some-character-action.js","Redux/actions/add-page-action.js","Redux/actions/add-selected-gender-action.js","Redux/actions/add-selected-species-action.js","Redux/actions/add-selected-status-action.js","components/Characters/FormSelected/FormSelected.js","components/Characters/Characters.js","Redux/actions/add-new-episode-action.js","Redux/actions/add-episode-page-action.js","components/Episodes/EpisodeTableRow/EpisodeTableRow.js","Redux/actions/add-episodes-name-action.js","components/Episodes/FormFilterNameEpisode/FormFilterNameEpisode.js","Redux/actions/add-episodes-filter-action.js","components/Episodes/FormFilterEpisode/FormFilterEpisode.js","Redux/actions/add-episodes-date-action.js","components/Episodes/FormFilterDateEpisode/FormFilterDateEpisode.js","components/Episodes/Episodes.js","components/Location/LocationTableRow/LocationTableRow.js","Redux/actions/add-new-location-action.js","Redux/actions/add-location-page-action.js","Redux/actions/add-location-name-action.js","components/Location/FormFilterNameLocation/FormFilterNameLocation.js","Redux/actions/add-location-type-action.js","components/Location/FormFilterTypeLocation/FormFilterTypeLocation.js","Redux/actions/add-location-dimension-action.js","components/Location/FormFilterDimensionLocation/FormFilterDimensionLocation.js","components/Location/Location.js","components/My watch/NewWatchTableRow/NewWatchTableRow.js","components/My watch/MyWatch.js","image/rickAndMorty3.png","image/rick-title.png","components/Home/Home.js","components/Navbar/Navbar.js","App.js","reportWebVitals.js","Redux/reducers/add-some-character-reducer.js","Redux/reducers/add-new-episode-reducer.js","Redux/reducers/add-new-location-reducer.js","store/store.js","Redux/reducers/add-selected-gender-reducer.js","Redux/reducers/add-selected-species-reducer.js","Redux/reducers/add-selected-status-reducer.js","Redux/reducers/add-episodes-name-reducer.js","Redux/reducers/add-episodes-filter-reducer.js","Redux/reducers/add-episodes-date-reducer.js","Redux/reducers/add-location-name-reducer.js","Redux/reducers/add-location-type-reducer.js","Redux/reducers/add-location-dimension-reducer.js","Redux/reducers/add-page-reducer.js","Redux/reducers/add-episode-page-reducer.js","Redux/reducers/add-location-page-reducer.js","index.js","components/Location/location.module.css","components/Characters/characters.module.css"],"names":["useStyles","makeStyles","root","maxWidth","opacity","media","height","image","marginLeft","marginRight","width","dialog","ul_list","listStyleType","SomeCharacter","props","React","useState","open","setOpen","handleClose","classes","className","Card","CardActionArea","CardMedia","onClick","title","name","CardContent","Typography","gutterBottom","variant","component","color","species","status","gender","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","src","alt","type","origin","location","DialogActions","Button","ADD_SOME_CHARACTER","ADD_NEW_EPISODE","ADD_NEW_LOCATION","ADD_SELECTED_GENDER","ADD_SELECTED_SPECIES","ADD_SELECTED_STATUS","ADD_EPISODES_NAME","ADD_EPISODES_FILTER","ADD_EPISODES_DATE","ADD_LOCATION_NAME","ADD_LOCATION_TYPE","ADD_LOCATION_DIMENSION","ADD_PAGE","ADD_EPISODE_PAGE","ADD_LOCATION_PAGE","addSomeCharacterAction","someCharacter","payload","addPageAction","page","addSelectedGenderAction","addSelectedSpeciesAction","addSelectedStatusAction","formControl","border","borderRadius","backgroundColor","form","padding","label","fontWeight","fontSize","option","connect","state","addSelectedGenderReducer","addSelectedSpeciesReducer","addSelectedStatusReducer","FormControl","onChange","e","preventDefault","console","log","target","value","InputLabel","Select","native","aria-label","Characters","pageSize","fetch","this","then","response","json","data","results","setState","countPages","Math","ceil","info","count","innerText","charactersContent","someCharacters","filter","item","map","characterPage","Pagination","size","handleOnChangePage","Component","addSomeCharacterReducer","addPageReducer","addNewEpisodeAction","newEpisode","addEpisodePageAction","episodePage","EpisodeTableRow","TableRow","TableCell","align","episode","airDate","addEpisodesNameAction","formContent","noValidate","autoComplete","TextField","addEpisodesFilterAction","findEpisode","addEpisodesDateAction","findDate","Episodes","rowsPerPage","currentPage","Table","weight","TableHead","TableBody","newEpisodes","toLowerCase","includes","episodesName","air_date","created","characters","shape","handleChangePage","addNewEpisodeReducer","addEpisodesNameReducer","addEpisodesFilterReducer","addEpisodesDateReducer","addEpisodePageReducer","cell","LocationTableRow","dimension","addNewLocationsAction","newLocations","addLocationPageAction","locationPage","addLocationNameAction","locationName","addLocationTypeAction","locationType","addLocationDimensionAction","locationDimension","Location","locationContent","locationTable","row","headRowLocation","addNewLocationReducer","addLocationNameReducer","addLocationTypeReducer","addLocationDimensionReducer","addLocationPageReducer","NewWatchTableRow","Checkbox","checkWatchItem","date","MyWatch","clearIdMas","idMas","window","reload","_idMas","push","remoteWatchItemOnClick","i","localStorage","length","key","removeItem","changeState","newRow","JSON","parse","getItem","_watchList","watchList","handleOnSubmit","floor","random","setItem","stringify","bind","onSubmit","TableContainer","Paper","Home","img","Navbar","to","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","getState","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e0d89293.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SomeCharacter.scss';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\"\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 350,\r\n        opacity: 0.9,\r\n    },\r\n    media: {\r\n        height: 250,\r\n    },\r\n    image: {\r\n        marginLeft: \"40px\",\r\n        marginRight: \"20px\",\r\n        height: \"350px\",\r\n        width: \"350px\"\r\n    },\r\n    dialog: {\r\n        width: \"440px\",\r\n    },\r\n    ul_list: {\r\n        listStyleType: \"none\",\r\n\r\n    }\r\n});\r\nconst SomeCharacter = (props) => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const classes = useStyles();\r\n        return (\r\n            <div className='someCharacter-content'>\r\n            <Card className={classes.root}>\r\n                <CardActionArea>\r\n                    <CardMedia onClick={handleClickOpen}\r\n                        className={classes.media}\r\n                        image={props.image}\r\n                        title={props.name}\r\n                    />\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            {props.name}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\r\n                            <ul className='character-info'>\r\n                                <li>species: {props.species}</li>\r\n                                <li>status: {props.status}</li>\r\n                                <li>gender: {props.gender}</li>\r\n                            </ul>\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n\r\n            </Card>\r\n                <Dialog open={open} onClose={handleClose} aria-labelledby=\"customized-dialog-title\">\r\n                    <DialogTitle id=\"customized-dialog-title\">{props.name}</DialogTitle>\r\n                    <form>\r\n                        <DialogContent className={classes.dialog}>\r\n                            <img className={classes.image} src={props.image} alt={props.name}/>\r\n                            <ul className={classes.ul_list}>\r\n                                <li>Name: {props.name}</li>\r\n                                <li>Species: {props.species}</li>\r\n                                <li>Status: {props.status}</li>\r\n                                <li>Gender: {props.gender}</li>\r\n                                <li>Type: {props.type}</li>\r\n                                <li>Origin: {props.origin}</li>\r\n                                <li>Location: {props.location}</li>\r\n                            </ul>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={handleClose} color=\"primary\">Cancel</Button>\r\n                        </DialogActions>\r\n                    </form>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n}\r\nexport default SomeCharacter;","export const ADD_SOME_CHARACTER = 'ADD_SOME_CHARACTER';\r\nexport const ADD_NEW_EPISODE = 'ADD_NEW_EPISODE';\r\nexport const ADD_NEW_LOCATION = 'ADD_NEW_LOCATION';\r\nexport const ADD_SELECTED_GENDER = 'ADD_SELECTED_GENDER';\r\nexport const ADD_SELECTED_SPECIES = 'ADD_SELECTED_SPECIES';\r\nexport const ADD_SELECTED_STATUS = 'ADD_SELECTED_STATUS';\r\nexport const ADD_EPISODES_NAME = 'ADD_EPISODES_NAME';\r\nexport const ADD_EPISODES_FILTER = 'ADD_EPISODES_FILTER';\r\nexport const ADD_EPISODES_DATE = 'ADD_EPISODES_DATE';\r\nexport const ADD_LOCATION_NAME = 'ADD_LOCATION_NAME';\r\nexport const ADD_LOCATION_TYPE = 'ADD_LOCATION_TYPE';\r\nexport const ADD_LOCATION_DIMENSION = 'ADD_LOCATION_DIMENSION';\r\nexport const ADD_PAGE = 'ADD_PAGE';\r\nexport const ADD_EPISODE_PAGE = 'ADD_EPISODE_PAGE';\r\nexport const ADD_LOCATION_PAGE = 'ADD_LOCATION_PAGE';","import {ADD_SOME_CHARACTER} from \"../types\";\r\n\r\nconst addSomeCharacterAction = (someCharacter) => {\r\n    return {\r\n        type: ADD_SOME_CHARACTER,\r\n        payload: someCharacter\r\n    }\r\n}\r\n\r\nexport default addSomeCharacterAction;","import {ADD_PAGE} from \"../types\";\r\n\r\nconst addPageAction = (page) => {\r\n    return {\r\n        type: ADD_PAGE,\r\n        payload: page\r\n    }\r\n}\r\n\r\nexport default addPageAction;","import {ADD_SELECTED_GENDER} from \"../types\";\r\n\r\nconst addSelectedGenderAction = (gender) => {\r\n    return {\r\n        type: ADD_SELECTED_GENDER,\r\n        payload: gender\r\n    }\r\n}\r\n\r\nexport default addSelectedGenderAction;","import {ADD_SELECTED_SPECIES} from \"../types\";\r\n\r\nconst addSelectedSpeciesAction = (species) => {\r\n    return {\r\n        type: ADD_SELECTED_SPECIES,\r\n        payload: species\r\n    }\r\n}\r\n\r\nexport default addSelectedSpeciesAction;","import {ADD_SELECTED_STATUS} from \"../types\";\r\n\r\nconst addSelectedStatusAction = (status) => {\r\n    return {\r\n        type: ADD_SELECTED_STATUS,\r\n        payload: status\r\n    }\r\n}\r\n\r\nexport default addSelectedStatusAction;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport addSelectedGenderAction from \"../../../Redux/actions/add-selected-gender-action\";\r\nimport addSelectedSpeciesAction from \"../../../Redux/actions/add-selected-species-action\";\r\nimport addSelectedStatusAction from \"../../../Redux/actions/add-selected-status-action\";\r\n\r\nconst useStyles = makeStyles(()=>({\r\n    formControl: {\r\n        marginLeft: '100px',\r\n        width: '250px',\r\n        border: '2px solid red',\r\n        borderRadius: '5px',\r\n        backgroundColor: \"lightblue\",\r\n        color:'green',\r\n        opacity: '0.7'\r\n    },\r\n    form: {\r\n        padding: '20px 175px',\r\n    },\r\n    label: {\r\n        color: \"red\",\r\n        fontWeight: \"bold\",\r\n        fontSize: \"1.3em\",\r\n    },\r\n    option: {\r\n        color: 'red',\r\n    }\r\n}))\r\nconst FormSelected = ({addSelectedGenderAction, addSelectedSpeciesAction, addSelectedStatusAction}) => {\r\n    const classes = useStyles();\r\n    const handleGenderOnChange = (e) => {\r\n        e.preventDefault();\r\n        console.log(e.target.value);\r\n        addSelectedGenderAction(e.target.value);\r\n    }\r\n    const handleSpeciesOnChange = (e) => {\r\n        e.preventDefault();\r\n        console.log(e.target.value);\r\n        addSelectedSpeciesAction(e.target.value);\r\n    }\r\n    const handleStatusOnChange = (e) => {\r\n        e.preventDefault();\r\n        addSelectedStatusAction(e.target.value);\r\n    }\r\n    return(\r\n        <form className={classes.form}>\r\n            <FormControl onChange={handleGenderOnChange} variant=\"filled\" color='secondary' className={classes.formControl}>\r\n                <InputLabel className={classes.label}>Gender</InputLabel>\r\n                <Select native color='secondary' label=\"Gender\">\r\n                    <option className={classes.option} aria-label=\"None\" value=\"\"/>\r\n                    <option className={classes.option} value='Male'>Male</option>\r\n                    <option className={classes.option} value='Female'>Female</option>\r\n                    <option className={classes.option} value='unknown'>unknown</option>\r\n                </Select>\r\n            </FormControl>\r\n            <FormControl onChange={handleSpeciesOnChange} variant=\"filled\" color='secondary' className={classes.formControl}>\r\n                <InputLabel className={classes.label}>Species</InputLabel>\r\n                <Select native color='secondary' label=\"Gender\">\r\n                    <option className={classes.option} aria-label=\"None\" value=\"\"/>\r\n                    <option className={classes.option} value='Human'>Human</option>\r\n                    <option className={classes.option} value='Alien'>Alien</option>\r\n                    <option className={classes.option} value='Humanoid'>Humanoid</option>\r\n                    <option className={classes.option} value='Animal'>Animal</option>\r\n                    <option className={classes.option} value='Mythological Creature'>Mythological Creature</option>\r\n                    <option className={classes.option} value='Disease'>Disease</option>\r\n                    <option className={classes.option} value='Cronenberg'>Cronenberg</option>\r\n                    <option className={classes.option} value='Poopybutthole'>Poopybutthole</option>\r\n                    <option className={classes.option} value='Robot'>Robot</option>\r\n                    <option className={classes.option} value='unknown'>unknown</option>\r\n\r\n\r\n                </Select>\r\n            </FormControl>\r\n            <FormControl onChange={handleStatusOnChange} variant=\"filled\" color='secondary' className={classes.formControl}>\r\n                <InputLabel className={classes.label}>Status</InputLabel>\r\n                <Select native color='secondary' label=\"Gender\">\r\n                    <option className={classes.option} aria-label=\"None\" value=\"\"/>\r\n                    <option className={classes.option} value='Alive'>Alive</option>\r\n                    <option className={classes.option} value='Dead'>Dead</option>\r\n                    <option className={classes.option} value='unknown'>Unknown</option>\r\n\r\n                </Select>\r\n            </FormControl>\r\n        </form>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        gender: state.addSelectedGenderReducer,\r\n        species: state.addSelectedSpeciesReducer,\r\n        status: state.addSelectedStatusReducer\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {addSelectedGenderAction, addSelectedSpeciesAction, addSelectedStatusAction})(FormSelected);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport SomeCharacter from \"./SomeCharacter/SomeCharacter\";\r\nimport addSomeCharacterAction from \"../../Redux/actions/add-some-character-action\";\r\nimport addPageAction from \"../../Redux/actions/add-page-action\";\r\nimport FormSelected from \"./FormSelected/FormSelected\";\r\nimport classes from \"./characters.module.css\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nclass Characters extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pageSize: 20\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        /*axios.get(`https://rickandmortyapi.com/api/character?page=${this.props.page}&count=${this.state.pageSize}`)\r\n            .then(response => {\r\n            this.props.addSomeCharacterAction(response.data.results);\r\n            this.setState({countPages: Math.ceil(response.data.info.count / this.state.pageSize)})\r\n        });*/\r\n\r\n        fetch(`https://rickandmortyapi.com/api/character?page=${this.props.page}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                    this.props.addSomeCharacterAction(data.results);\r\n                    this.setState({countPages: Math.ceil(data.info.count / this.state.pageSize)})\r\n            });\r\n    }\r\n    handleOnChangePage(e) {\r\n        console.log(e.target.innerText)\r\n        this.props.addPageAction(+e.target.innerText);\r\n        fetch(`https://rickandmortyapi.com/api/character?page=${+e.target.innerText}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.props.addSomeCharacterAction(data.results);\r\n                this.setState({countPages: Math.ceil(data.info.count / this.state.pageSize)})\r\n            });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={classes.charactersContent}>\r\n                <FormSelected/>\r\n                {this.props.someCharacters.results.filter(item => (item.species === this.props.species || this.props.species === '')).filter(item => item.gender === this.props.gender || this.props.gender === '').filter(item => item.status === this.props.status || this.props.status === '').map(item => {\r\n                    return (\r\n                        <SomeCharacter id={item.id}\r\n                                       image={item.image}\r\n                                       name={item.name}\r\n                                       species={item.species}\r\n                                       gender={item.gender}\r\n                                       status={item.status}\r\n                                       origin={item.origin.name}\r\n                                       type={item.type}\r\n                                       location={item.location.name}\r\n                        />\r\n                    )\r\n                })}\r\n                <div className={classes.characterPage}>\r\n                    <Pagination count={this.state.countPages} size=\"small\" color=\"secondary\" onClick={(e)=>this.handleOnChangePage(e)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        someCharacters: state.addSomeCharacterReducer,\r\n        gender: state.addSelectedGenderReducer,\r\n        species: state.addSelectedSpeciesReducer,\r\n        status: state.addSelectedStatusReducer,\r\n        page: state.addPageReducer\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {addSomeCharacterAction, addPageAction})(Characters);","import {ADD_NEW_EPISODE} from \"../types\";\r\n\r\nconst addNewEpisodeAction = (newEpisode) => {\r\n    return {\r\n        type: ADD_NEW_EPISODE,\r\n        payload: newEpisode\r\n    }\r\n}\r\n\r\nexport default addNewEpisodeAction;","import {ADD_EPISODE_PAGE} from \"../types\";\r\n\r\nconst addEpisodePageAction = (episodePage) => {\r\n    return {\r\n        type: ADD_EPISODE_PAGE,\r\n        payload: episodePage\r\n    }\r\n}\r\nexport default addEpisodePageAction;","import React from \"react\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport './episodesTableRow.scss'\r\n\r\nconst EpisodeTableRow = (props) => {\r\n    return (\r\n        <TableRow className='episodes-table-row'>\r\n            <TableCell align=\"center\">{props.name}</TableCell>\r\n            <TableCell align=\"center\">{props.episode}</TableCell>\r\n            <TableCell align=\"center\">{props.airDate}</TableCell>\r\n\r\n        </TableRow>\r\n\r\n    )\r\n}\r\n\r\nexport default EpisodeTableRow;","import {ADD_EPISODES_NAME} from \"../types\";\r\n\r\nconst addEpisodesNameAction = (name) => {\r\n    return {\r\n        type: ADD_EPISODES_NAME,\r\n        payload: name\r\n    }\r\n}\r\nexport default addEpisodesNameAction;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {FormControl} from \"@material-ui/core\";\r\nimport addEpisodesNameAction from \"../../../Redux/actions/add-episodes-name-action\";\r\nconst useStyles = makeStyles({\r\n    formContent: {\r\n        color: \"orange\",\r\n        fontSize: '1.2em',\r\n        fontWeight: \"bold\"\r\n    }\r\n})\r\nconst FormFilterNameEpisode = ({addEpisodesNameAction}) => {\r\n    const classes = useStyles();\r\n    const handleOnChangeName = (e) => {\r\n        addEpisodesNameAction(e.target.value);\r\n    }\r\n    return (\r\n        <form className={classes.formContent}>\r\n            <FormControl onChange = {handleOnChangeName} noValidate autoComplete=\"off\">\r\n                <TextField id=\"outlined-search\" size='small' color='secondary' type=\"search\" variant=\"outlined\"/>\r\n            </FormControl>\r\n        </form>\r\n    )\r\n}\r\nexport default connect(null, {addEpisodesNameAction})(FormFilterNameEpisode);","import {ADD_EPISODES_FILTER} from \"../types\";\r\n\r\nconst addEpisodesFilterAction = (findEpisode) => {\r\n    return {\r\n        type: ADD_EPISODES_FILTER,\r\n        payload: findEpisode\r\n    }\r\n}\r\n\r\nexport default addEpisodesFilterAction;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {FormControl} from \"@material-ui/core\";\r\nimport addEpisodesFilterAction from \"../../../Redux/actions/add-episodes-filter-action\";\r\n\r\nconst useStyles = makeStyles({\r\n    formContent: {\r\n        color: \"orange\",\r\n        fontSize: '1.2em',\r\n        fontWeight: \"bold\"\r\n    }\r\n})\r\nconst FormFilterEpisode = ({addEpisodesFilterAction}) => {\r\n    const classes = useStyles();\r\n    const handleOnChangeName = (e) => {\r\n        addEpisodesFilterAction(e.target.value);\r\n    }\r\n    return (\r\n        <form className={classes.formContent}>\r\n            <FormControl onChange = {handleOnChangeName} noValidate autoComplete=\"off\">\r\n                <TextField id=\"outlined-search\" size='small' color='secondary' type=\"search\" variant=\"outlined\"/>\r\n            </FormControl>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default connect(null, {addEpisodesFilterAction})(FormFilterEpisode);","import {ADD_EPISODES_DATE} from \"../types\";\r\n\r\nconst addEpisodesDateAction = (findDate) => {\r\n    return {\r\n        type: ADD_EPISODES_DATE,\r\n        payload: findDate\r\n    }\r\n}\r\n\r\nexport default addEpisodesDateAction;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {FormControl} from \"@material-ui/core\";\r\nimport addEpisodesDateAction from \"../../../Redux/actions/add-episodes-date-action\";\r\n\r\nconst useStyles = makeStyles({\r\n    formContent: {\r\n        color: \"orange\",\r\n        fontSize: '1.2em',\r\n        fontWeight: \"bold\"\r\n    }\r\n})\r\nconst FormFilterDateEpisode = ({addEpisodesDateAction}) => {\r\n    const classes = useStyles();\r\n    const handleOnChangeName = (e) => {\r\n        addEpisodesDateAction(e.target.value);\r\n    }\r\n    return (\r\n        <form className={classes.formContent}>\r\n            <FormControl onChange = {handleOnChangeName} noValidate autoComplete=\"off\">\r\n                <TextField id=\"outlined-search\" size='small' color='secondary' type=\"search\" variant=\"outlined\"/>\r\n            </FormControl>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default connect(null, {addEpisodesDateAction})(FormFilterDateEpisode);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport addNewEpisodeAction from \"../../Redux/actions/add-new-episode-action\";\r\nimport addEpisodePageAction from \"../../Redux/actions/add-episode-page-action\";\r\nimport EpisodeTableRow from \"./EpisodeTableRow/EpisodeTableRow\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport FormFilterNameEpisode from \"./FormFilterNameEpisode/FormFilterNameEpisode\";\r\nimport FormFilterEpisode from \"./FormFilterEpisode/FormFilterEpisode\";\r\nimport FormFilterDateEpisode from \"./FormFilterDateEpisode/FormFilterDateEpisode\";\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport './episodes.scss';\r\n\r\n\r\nclass Episodes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rowsPerPage: 20,\r\n            currentPage: 1,\r\n            countPages: 1\r\n            }\r\n    }\r\n    componentDidMount() {\r\n        fetch(`https://rickandmortyapi.com/api/episode?page=${this.props.episodePage}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.props.addNewEpisodeAction(data.results);\r\n                this.setState({countPages: Math.ceil(data.info.count/this.state.rowsPerPage)})\r\n            });\r\n    }\r\n    handleChangePage(e) {\r\n        this.props.addEpisodePageAction(+e.target.innerText);\r\n        fetch(`https://rickandmortyapi.com/api/episode?page=${+e.target.innerText}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.props.addNewEpisodeAction(data.results);\r\n                this.setState({countPages: Math.ceil(data.info.count/this.state.rowsPerPage)})\r\n            });\r\n    }\r\n\r\nrender() {\r\n\r\n    return (\r\n        <div className='episode-content'>\r\n            <div className='episodes-table' >\r\n                <Table weight=\"bold\" size=\"small\" aria-label=\"a dense table\">\r\n                    <TableHead  className='episodes-headRow'>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\" className='episodes-headRow'>\r\n                                Name\r\n                                <FormFilterNameEpisode/>\r\n                            </TableCell>\r\n                            <TableCell align=\"center\" className='episodes-headRow'>\r\n                                Episode\r\n                                <FormFilterEpisode/>\r\n                            </TableCell>\r\n                            <TableCell align=\"center\" className='episodes-headRow'>\r\n                                Air-Date\r\n                                <FormFilterDateEpisode/>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {this.props.newEpisodes.results.filter(item => item.name.toLowerCase().includes(this.props.episodesName) || this.props.episodesName === '').filter(\r\n                            item => item.episode.toLowerCase().includes(this.props.findEpisode)).filter(\r\n                            item => item.air_date.toLowerCase().includes(this.props.findDate)).map(item => {\r\n                            console.log(item.name);\r\n                            return (\r\n                                <EpisodeTableRow id={item.id}\r\n                                                 episode={item.episode}\r\n                                                 name={item.name}\r\n                                                 airDate={item.air_date}\r\n                                                 created={item.created}\r\n                                                 characters={item.characters}\r\n                                />\r\n                            )\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </div>\r\n            <div>\r\n               <Pagination count={this.state.countPages} variant=\"outlined\" shape=\"rounded\"\r\n                           onClick={(e)=>this.handleChangePage(e)}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        newEpisodes: state.addNewEpisodeReducer,\r\n        episodesName: state.addEpisodesNameReducer,\r\n        findEpisode: state.addEpisodesFilterReducer,\r\n        findDate: state.addEpisodesDateReducer,\r\n        episodePage: state.addEpisodePageReducer\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {addNewEpisodeAction, addEpisodePageAction})(Episodes);","import React from 'react';\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nconst useStyles = makeStyles({\r\n    cell: {\r\n        color: \"green\",\r\n        fontWeight: \"bold\"\r\n    }\r\n});\r\nconst LocationTableRow = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <TableRow >\r\n            <TableCell className={classes.cell} align=\"center\">{props.name}</TableCell>\r\n            <TableCell className={classes.cell} align=\"center\">{props.type}</TableCell>\r\n            <TableCell className={classes.cell} align=\"center\">{props.dimension}</TableCell>\r\n\r\n        </TableRow>\r\n    )\r\n}\r\n\r\nexport default LocationTableRow;","import {ADD_NEW_LOCATION} from \"../types\";\r\n\r\nconst addNewLocationsAction = (newLocations) => {\r\n    return {\r\n        type: ADD_NEW_LOCATION,\r\n        payload: newLocations\r\n    }\r\n}\r\n\r\nexport default addNewLocationsAction;","import {ADD_LOCATION_PAGE} from \"../types\";\r\n\r\nconst addLocationPageAction = (locationPage) => {\r\n    return {\r\n        type: ADD_LOCATION_PAGE,\r\n        payload: locationPage\r\n    }\r\n}\r\nexport default addLocationPageAction;","import {ADD_LOCATION_NAME} from \"../types\";\r\n\r\nconst addLocationNameAction = (locationName) => {\r\n    return {\r\n        type: ADD_LOCATION_NAME,\r\n        payload: locationName\r\n    }\r\n}\r\nexport default addLocationNameAction;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport addLocationNameAction from \"../../../Redux/actions/add-location-name-action\";\r\nconst useStyles = makeStyles({\r\n    label: {\r\n        color: \"red\",\r\n        fontWeight: \"bold\",\r\n        fontSize: \"1.2em\",\r\n    }\r\n})\r\nconst FormFilterNameLocation = ({addLocationNameAction}) => {\r\n    const handleOnChangeName = (e) => {\r\n        addLocationNameAction(e.target.value);\r\n    }\r\n    const classes= useStyles();\r\n    return(\r\n        <form onChange={handleOnChangeName}>\r\n        <InputLabel className={classes.label}>Name</InputLabel>\r\n        <TextField id=\"standard-search\" color=\"secondary\" type=\"search\" />\r\n        </form>\r\n    )\r\n}\r\nexport default connect(null, {addLocationNameAction})(FormFilterNameLocation);","import {ADD_LOCATION_TYPE} from \"../types\";\r\n\r\nconst addLocationTypeAction = (locationType) => {\r\n    return {\r\n        type: ADD_LOCATION_TYPE,\r\n        payload: locationType\r\n    }\r\n}\r\n\r\nexport default addLocationTypeAction;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport addLocationTypeAction from \"../../../Redux/actions/add-location-type-action\";\r\nconst useStyles = makeStyles({\r\n    label: {\r\n        color: \"red\",\r\n        fontWeight: \"bold\",\r\n        fontSize: \"1.2em\",\r\n    }\r\n})\r\nconst FormFilterTypeLocation = ({addLocationTypeAction}) => {\r\n    const classes= useStyles();\r\n    const handleOnChangeType = (e) => {\r\n        e.preventDefault();\r\n        addLocationTypeAction(e.target.value);\r\n    }\r\n    return(\r\n        <form onChange={handleOnChangeType}>\r\n            <InputLabel className={classes.label}>Type</InputLabel>\r\n            <TextField id=\"standard-search\" color=\"secondary\" type=\"search\" />\r\n        </form>\r\n    )\r\n}\r\nexport default connect(null, {addLocationTypeAction})(FormFilterTypeLocation);","import {ADD_LOCATION_DIMENSION} from \"../types\";\r\n\r\nconst addLocationDimensionAction = (locationDimension) => {\r\n    return {\r\n        type: ADD_LOCATION_DIMENSION,\r\n        payload: locationDimension\r\n    }\r\n}\r\nexport default addLocationDimensionAction;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport addLocationDimensionAction from \"../../../Redux/actions/add-location-dimension-action\";\r\nconst useStyles = makeStyles({\r\n    label: {\r\n        color: \"red\",\r\n        fontWeight: \"bold\",\r\n        fontSize: \"1.2em\",\r\n    }\r\n})\r\nconst FormFilterDimensionLocation = ({addLocationDimensionAction}) => {\r\n    const classes= useStyles();\r\n    const handleOnChangeDimension = (e) => {\r\n        e.preventDefault();\r\n        addLocationDimensionAction(e.target.value)\r\n    }\r\n    return(\r\n        <form onChange={handleOnChangeDimension}>\r\n            <InputLabel className={classes.label}>Dimension</InputLabel>\r\n            <TextField id=\"standard-search\" color=\"secondary\" type=\"search\" />\r\n        </form>\r\n    )\r\n}\r\nexport default connect(null, {addLocationDimensionAction})(FormFilterDimensionLocation);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport LocationTableRow from \"./LocationTableRow/LocationTableRow\";\r\nimport addNewLocationsAction from \"../../Redux/actions/add-new-location-action\";\r\nimport addLocationPageAction from \"../../Redux/actions/add-location-page-action\";\r\nimport classes from './location.module.css';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport FormFilterNameLocation from \"./FormFilterNameLocation/FormFilterNameLocation\";\r\nimport FormFilterTypeLocation from \"./FormFilterTypeLocation/FormFilterTypeLocation\";\r\nimport FormFilterDimensionLocation from \"./FormFilterDimensionLocation/FormFilterDimensionLocation\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nclass Location extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rowsPerPage: 20,\r\n            currentPage: 1,\r\n            countPages: 1\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        fetch(`https://rickandmortyapi.com/api/location?page=${2}`)\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                this.props.addNewLocationsAction(data.results);\r\n                this.setState({countPages: Math.ceil(data.info.count/this.state.rowsPerPage)})\r\n            })\r\n    }\r\n    handleOnChangePage(e) {\r\n        this.props.addLocationPageAction(+e.target.innerText);\r\n        fetch(`https://rickandmortyapi.com/api/location?page=${+e.target.innerText}`)\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                this.props.addNewLocationsAction(data.results);\r\n                this.setState({countPages: Math.ceil(data.info.count/this.state.rowsPerPage)})\r\n            })\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={classes.locationContent}>\r\n                <div className={classes.locationTable} >\r\n                    <Table className={classes.row} weight=\"bold\" size=\"medium\" aria-label=\"a dense table\">\r\n                        <TableHead>\r\n\r\n                                <TableCell align=\"center\" className={classes.headRowLocation}>\r\n                                    <FormFilterNameLocation/>\r\n                                </TableCell>\r\n                                <TableCell align=\"center\" className={classes.headRowLocation}>\r\n                                    <FormFilterTypeLocation/>\r\n                                </TableCell>\r\n                                <TableCell align=\"center\" className={classes.headRowLocation}>\r\n                                    <FormFilterDimensionLocation/>\r\n                                </TableCell>\r\n\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this.props.newLocations.filter(item => item.name.toLowerCase().includes(this.props.locationName.toLowerCase())).filter(\r\n                                item => item.type.toLowerCase().includes(this.props.locationType.toLowerCase())).filter(\r\n                                item => item.dimension.toLowerCase().includes(this.props.locationDimension.toLowerCase())).map(item => {\r\n                                return (\r\n                                    <LocationTableRow id={item.id}\r\n                                                      name={item.name}\r\n                                                      type={item.type}\r\n                                                      dimension={item.dimension}\r\n                                    />\r\n                                )\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </div>\r\n                <div className={classes.characterPage}>\r\n                    <Pagination count={this.state.countPages} size=\"small\" color=\"secondary\"\r\n                                onClick={(e)=>this.handleOnChangePage(e)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        newLocations: state.addNewLocationReducer,\r\n        locationName: state.addLocationNameReducer,\r\n        locationType: state.addLocationTypeReducer,\r\n        locationDimension: state.addLocationDimensionReducer,\r\n        locationPage: state.addLocationPageReducer\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {addNewLocationsAction, addLocationPageAction})(Location);","import React from \"react\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport './newWatchTableRow.scss';\r\n\r\nconst NewWatchTableRow = (props) => {\r\n    const handleOnClick = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        props.checkWatchItem(e.target.id);\r\n    }\r\n    return (\r\n        <TableRow className='table-row' color='red'>\r\n            <Checkbox onClick={handleOnClick}\r\n                      className=\"text-field\"\r\n                      id={props.id}\r\n                      name=\"check\"\r\n                      color=\"secondary\"\r\n                      align=\"center\"\r\n            />\r\n            <TableCell  align=\"center\">{props.name}</TableCell>\r\n            <TableCell  align=\"center\">{props.episode}</TableCell>\r\n            <TableCell  align=\"center\">{props.date}</TableCell>\r\n\r\n        </TableRow>\r\n    )\r\n}\r\nexport default NewWatchTableRow;","import React, {Component} from 'react';\r\nimport './myWatch.scss';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport 'fontsource-roboto';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport NewWatchTableRow from \"./NewWatchTableRow/NewWatchTableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\n\r\nclass MyWatch extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idMas: [],\r\n            watchList: []\r\n        }\r\n        this.checkWatchItem = this.checkWatchItem.bind(this);\r\n        this.remoteWatchItemOnClick = this.remoteWatchItemOnClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.changeState();\r\n        this.checkWatchItem();\r\n    }\r\n\r\n    clearIdMas = () => {\r\n        this.setState({idMas: []});\r\n        window.location.reload();\r\n    }\r\n\r\n    checkWatchItem = (id) => {\r\n        let _idMas = this.state.idMas;\r\n        _idMas.push(id);\r\n        this.setState({idMas: _idMas});\r\n    }\r\n    remoteWatchItemOnClick = () => {\r\n        for (let i = 0; i < localStorage.length; i++) {\r\n            if (this.state.idMas.includes(localStorage.key(i))) {\r\n                localStorage.removeItem(`${localStorage.key(i)}`);\r\n            }\r\n        }\r\n        this.clearIdMas();\r\n    }\r\n\r\n    changeState = () => {\r\n        for (let i = 0; i < localStorage.length; i++) {\r\n            let newRow = JSON.parse(localStorage.getItem(`${localStorage.key(i)}`));\r\n            let _watchList = this.state.watchList;\r\n            _watchList.push(newRow)\r\n            this.setState({watchList: _watchList});\r\n        }\r\n    }\r\n    handleOnSubmit = (e) => {\r\n        e.preventDefault();\r\n        const newRow = {\r\n            id: Math.floor(Math.random() * 100),\r\n            name: e.target[0].value,\r\n            episode: e.target[2].value,\r\n            date: e.target[4].value,\r\n        };\r\n        console.log(newRow);\r\n        if (newRow.name || newRow.episode || newRow.date) {\r\n            localStorage.setItem(`${newRow.id}`, JSON.stringify(newRow));\r\n        }\r\n        e.target[0].value = '';\r\n        e.target[2].value = '';\r\n        e.target[4].value = '';\r\n        window.location.reload();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='myWatch-content'>\r\n                <InputLabel className='form-title'><h3>Add your new Episode of Rick&Morty film</h3></InputLabel>\r\n                <form className='font-content' noValidate autoComplete=\"off\" onSubmit={this.handleOnSubmit}>\r\n                    <TextField\r\n                        className=\"text-field\"\r\n                        id=\"name\"\r\n                        label=\"Name\"\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                    />\r\n                    <TextField\r\n                        className=\"text-field\"\r\n                        id=\"episode\"\r\n                        label=\"Episode\"\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                    />\r\n                    <TextField\r\n                        className=\"text-field\"\r\n                        id=\"date\"\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                        type=\"date\"\r\n                    />\r\n                    <Button type='submit' variant=\"contained\" color=\"secondary\">Add new Watch</Button>\r\n                </form>\r\n                < div className='table-content'>\r\n                    <TableContainer component={Paper}>\r\n                        <Table aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell className='head-row' align=\"center\"> </TableCell>\r\n                                    <TableCell className='head-row' align=\"center\">Name</TableCell>\r\n                                    <TableCell className='head-row' align=\"center\">Episode</TableCell>\r\n                                    <TableCell className='head-row' align=\"center\">Date</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody className='body-content' color='red'>\r\n                                {this.state.watchList.map(item => {\r\n                                    return (\r\n                                        <NewWatchTableRow\r\n                                            id={item.id}\r\n                                            name={item.name}\r\n                                            episode={item.episode}\r\n                                            date={item.date}\r\n                                            checkWatchItem={this.checkWatchItem}\r\n                                        />\r\n                                    )\r\n                                })}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </div>\r\n                <Button onClick={this.remoteWatchItemOnClick} variant=\"contained\" color=\"secondary\" size=\"large\"\r\n                        className='remote-button'>Remove</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyWatch;\r\n","export default __webpack_public_path__ + \"static/media/rickAndMorty3.29df0783.png\";","export default __webpack_public_path__ + \"static/media/rick-title.ae6cc7b2.png\";","import React from 'react';\r\nimport './home.scss';\r\nimport img from '../../image/rickAndMorty3.png';\r\nimport title from '../../image/rick-title.png';\r\nconst Home = () => {\r\n    return(\r\n        <div className='home-content'>\r\n            <img className='title' src={title} alt='Rick and Morty'/>\r\n            <img className='rick-morty-image' src={img} alt='Rick&Morty'/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport './Navbar.scss'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n\r\n        <div className='navbar-wrapper'>\r\n            {/*<div><NavLink className='nav' to='/home'>Home</NavLink></div>*/}\r\n            <div><NavLink className='nav' to='/characters'>Characters</NavLink></div>\r\n            <div><NavLink className='nav' to='/episodes'>Episodes</NavLink></div>\r\n            <div><NavLink className='nav' to='/location'>Location</NavLink></div>\r\n            <div><NavLink className='nav' to='/mywatch'>My watch</NavLink></div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import {BrowserRouter, NavLink, Route} from \"react-router-dom\";\nimport './App.css';\nimport Characters from \"./components/Characters/Characters\";\nimport Episodes from \"./components/Episodes/Episodes\";\nimport Location from \"./components/Location/Location\";\nimport MyWatch from \"./components/My watch/MyWatch\";\nimport Home from \"./components/Home/Home\";\nimport Navbar from \"./components/Navbar/Navbar\";\n\nfunction App() {\n    return (\n        <div className='app-wrapper'>\n            <BrowserRouter>\n                <Navbar/>\n                <div className='content'>\n                    <Route path='/characters' component={Characters}/>\n                    <Route path='/episodes' component={Episodes}/>\n                    <Route path='/location' component={Location}/>\n                    <Route path='/mywatch' component={MyWatch}/>\n                  {/*  <Route path='/home' component={Home}/>*/}\n                    <Route path='/' component={Home}/>\n                </div>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {ADD_SOME_CHARACTER} from \"../types\";\r\n\r\nconst initialState = {\r\n    data: {\r\n        results: []\r\n    }\r\n\r\n}\r\nexport const addSomeCharacterReducer = (state=initialState.data, action) => {\r\n    // eslint-disable-next-line default-case\r\n    switch (action.type) {\r\n        case ADD_SOME_CHARACTER:\r\n            return {...state, results: action.payload}\r\n    }\r\n    return state;\r\n}\r\n","import {ADD_NEW_EPISODE} from \"../types\";\r\n\r\nconst initialState = {\r\n    data: {\r\n        results: []\r\n    }\r\n}\r\n\r\nexport const addNewEpisodeReducer = (state=initialState.data, action) => {\r\n    switch (action.type) {\r\n        case ADD_NEW_EPISODE:\r\n            return {...state, results: action.payload}\r\n    }\r\n    return state;\r\n}","import {ADD_NEW_LOCATION} from \"../types\";\r\nconst initialState = {\r\n    data: {\r\n        results: []\r\n    }\r\n}\r\nexport const addNewLocationReducer = (state=initialState.data.results, action) => {\r\n    switch (action.type) {\r\n        case ADD_NEW_LOCATION:\r\n            return action.payload\r\n    }\r\n    return state;\r\n}","import thunk from 'redux-thunk';\r\nimport {createStore, applyMiddleware, combineReducers} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport {addSomeCharacterReducer} from \"../Redux/reducers/add-some-character-reducer\";\r\nimport {addNewEpisodeReducer} from \"../Redux/reducers/add-new-episode-reducer\";\r\nimport {addNewLocationReducer} from \"../Redux/reducers/add-new-location-reducer\";\r\nimport {addSelectedGenderReducer} from \"../Redux/reducers/add-selected-gender-reducer\";\r\nimport {addSelectedSpeciesReducer} from \"../Redux/reducers/add-selected-species-reducer\";\r\nimport {addSelectedStatusReducer} from \"../Redux/reducers/add-selected-status-reducer\";\r\nimport {addEpisodesNameReducer} from \"../Redux/reducers/add-episodes-name-reducer\";\r\nimport {addEpisodesFilterReducer} from \"../Redux/reducers/add-episodes-filter-reducer\";\r\nimport {addEpisodesDateReducer} from \"../Redux/reducers/add-episodes-date-reducer\";\r\nimport {addLocationNameReducer} from \"../Redux/reducers/add-location-name-reducer\";\r\nimport {addLocationTypeReducer} from \"../Redux/reducers/add-location-type-reducer\";\r\nimport {addLocationDimensionReducer} from \"../Redux/reducers/add-location-dimension-reducer\";\r\nimport {addPageReducer} from \"../Redux/reducers/add-page-reducer\";\r\nimport {addEpisodePageReducer} from \"../Redux/reducers/add-episode-page-reducer\";\r\nimport {addLocationPageReducer} from \"../Redux/reducers/add-location-page-reducer\";\r\n\r\nconst reducer = combineReducers({\r\n    addSomeCharacterReducer,\r\n    addNewEpisodeReducer,\r\n    addNewLocationReducer,\r\n    addSelectedGenderReducer,\r\n    addSelectedSpeciesReducer,\r\n    addSelectedStatusReducer,\r\n    addEpisodesNameReducer,\r\n    addEpisodesFilterReducer,\r\n    addEpisodesDateReducer,\r\n    addLocationNameReducer,\r\n    addLocationTypeReducer,\r\n    addLocationDimensionReducer,\r\n    addPageReducer,\r\n    addEpisodePageReducer,\r\n    addLocationPageReducer\r\n})\r\nconst store = createStore(\r\n    reducer,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n)\r\nconsole.log(store.getState());\r\nexport default store;","import {ADD_SELECTED_GENDER} from \"../types\";\r\n\r\nexport const addSelectedGenderReducer = (state = '', action) => {\r\n    switch(action.type) {\r\n        case ADD_SELECTED_GENDER:\r\n            return action.payload\r\n    }\r\n    return state;\r\n}","import {ADD_SELECTED_SPECIES} from \"../types\";\r\n\r\nexport const addSelectedSpeciesReducer = (state='', action) => {\r\n    switch (action.type) {\r\n        case ADD_SELECTED_SPECIES: {\r\n            return action.payload\r\n        }\r\n    }\r\n    return state;\r\n}","import {ADD_SELECTED_STATUS} from \"../types\";\r\n\r\nexport const addSelectedStatusReducer = (state = '', action) => {\r\n    switch (action.type) {\r\n        case ADD_SELECTED_STATUS: {\r\n            return action.payload;\r\n        }\r\n    }\r\n    return state;\r\n}","import {ADD_EPISODES_NAME} from \"../types\";\r\n\r\nexport const addEpisodesNameReducer = (state='', action) => {\r\n    switch (action.type) {\r\n        case ADD_EPISODES_NAME: {\r\n            return action.payload\r\n        }\r\n    }\r\n    return state;\r\n}","import {ADD_EPISODES_FILTER} from \"../types\";\r\n\r\nexport const addEpisodesFilterReducer = (state='', action) => {\r\n    switch (action.type) {\r\n        case ADD_EPISODES_FILTER: {\r\n            return action.payload;\r\n        }\r\n    }\r\n    return state;\r\n}","import {ADD_EPISODES_DATE} from \"../types\";\r\n\r\nexport const addEpisodesDateReducer = (state='', action) => {\r\n    switch (action.type) {\r\n        case ADD_EPISODES_DATE: {\r\n            return action.payload;\r\n        }\r\n    }\r\n    return state;\r\n}","import {ADD_LOCATION_NAME} from \"../types\";\r\n\r\nexport const addLocationNameReducer = (state='', action) => {\r\n    switch (action.type) {\r\n        case ADD_LOCATION_NAME: {\r\n            return action.payload;\r\n        }\r\n    }\r\n    return state;\r\n}","import {ADD_LOCATION_TYPE} from \"../types\";\r\n\r\nexport const addLocationTypeReducer = (state='', action) => {\r\n    switch (action.type) {\r\n        case ADD_LOCATION_TYPE: {\r\n            return action.payload;\r\n        }\r\n    }\r\n    return state;\r\n}","import {ADD_LOCATION_DIMENSION} from \"../types\";\r\n\r\nexport const addLocationDimensionReducer = (state='', action) => {\r\n    switch (action.type) {\r\n        case ADD_LOCATION_DIMENSION: {\r\n            return action.payload;\r\n        }\r\n    }\r\n    return state;\r\n}","import {ADD_PAGE} from \"../types\";\r\n\r\nexport const addPageReducer = (state=1, action) => {\r\n    switch (action.type) {\r\n        case ADD_PAGE:\r\n            return action.payload\r\n    }\r\n    return state;\r\n\r\n}","import {ADD_EPISODE_PAGE} from \"../types\";\r\n\r\nexport const addEpisodePageReducer = (state=1, action) => {\r\n    switch (action.type) {\r\n        case ADD_EPISODE_PAGE:\r\n            return action.payload;\r\n    }\r\n    return state;\r\n}","import {ADD_LOCATION_PAGE} from \"../types\";\r\n\r\nexport const addLocationPageReducer = (state=1, action) => {\r\n    switch (action.type) {\r\n        case ADD_LOCATION_PAGE:\r\n            return action.payload;\r\n    }\r\n    return state;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./store/store\";\nimport {Provider} from \"react-redux\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"locationContent\":\"location_locationContent__15yK9\",\"locationTable\":\"location_locationTable__1nsOx\",\"headRowLocation\":\"location_headRowLocation__20JOh\",\"body\":\"location_body__2i4BI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"charactersContent\":\"characters_charactersContent__3xl2i\",\"pages\":\"characters_pages__30bel\",\"selectPage\":\"characters_selectPage__1Wtwr\",\"characterPage\":\"characters_characterPage__3ERaZ\"};"],"sourceRoot":""}