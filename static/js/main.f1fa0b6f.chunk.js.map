{"version":3,"sources":["components/Characters/SomeCharacter/CharacterCardAction/CharacterCardAction.js","components/Characters/SomeCharacter/SomeCharacter.js","Redux/types.js","Redux/actions/add-some-character-action.js","Redux/actions/add-selected-gender-action.js","Redux/actions/add-selected-species-action.js","Redux/actions/add-selected-status-action.js","components/Characters/FormSelected/FormSelected.js","components/Characters/Characters.js","Redux/actions/add-new-episode-action.js","components/Episodes/EpisodeTableRow/EpisodeTableRow.js","Redux/actions/add-episodes-name-action.js","components/Episodes/FormFilterNameEpisode/FormFilterNameEpisode.js","Redux/actions/add-episodes-filter-action.js","components/Episodes/FormFilterEpisode/FormFilterEpisode.js","Redux/actions/add-episodes-date-action.js","components/Episodes/FormFilterDateEpisode/FormFilterDateEpisode.js","components/Episodes/Episodes.js","components/Location/LocationTableRow/LocationTableRow.js","Redux/actions/add-new-location-action.js","components/Location/Location.js","components/My watch/NewWatchTableRow/NewWatchTableRow.js","components/My watch/MyWatch.js","image/rickAndMorty3.png","image/rick-title.png","components/Home/Home.js","components/Navbar/Navbar.js","App.js","reportWebVitals.js","Redux/reducers/add-some-character-reducer.js","Redux/reducers/add-new-episode-reducer.js","Redux/reducers/add-new-location-reducer.js","store/store.js","Redux/reducers/add-selected-gender-reducer.js","Redux/reducers/add-selected-species-reducer.js","Redux/reducers/add-selected-status-reducer.js","Redux/reducers/add-episodes-name-reducer.js","Redux/reducers/add-episodes-filter-reducer.js","Redux/reducers/add-episodes-date-reducer.js","index.js"],"names":["useStyles","makeStyles","root","background","border","borderBottom","boxShadow","color","textShadow","image","marginLeft","marginRight","height","width","dialog","ul_list","listStyleType","CharacterCardAction","props","classes","React","useState","open","setOpen","handleClose","CardActions","Button","size","variant","onClick","className","Dialog","onClose","aria-labelledby","DialogTitle","id","name","DialogContent","src","alt","species","gender","type","status","origin","location","DialogActions","maxWidth","opacity","media","SomeCharacter","Card","CardActionArea","CardMedia","title","CardContent","Typography","gutterBottom","component","ADD_SOME_CHARACTER","ADD_NEW_EPISODE","ADD_NEW_LOCATION","ADD_SELECTED_GENDER","ADD_SELECTED_SPECIES","ADD_SELECTED_STATUS","ADD_EPISODES_NAME","ADD_EPISODES_FILTER","ADD_EPISODES_DATE","addSomeCharacterAction","someCharacter","payload","addSelectedGenderAction","addSelectedSpeciesAction","addSelectedStatusAction","formControl","borderRadius","backgroundColor","form","padding","label","fontWeight","fontSize","option","connect","state","addSelectedGenderReducer","addSelectedSpeciesReducer","addSelectedStatusReducer","FormControl","onChange","e","preventDefault","console","log","target","value","InputLabel","Select","native","aria-label","someCharacters","addSomeCharacterReducer","axios","get","then","response","data","results","filter","item","map","Pagination","count","addNewEpisodeAction","newEpisode","EpisodeTableRow","TableRow","TableCell","align","episode","airDate","addEpisodesNameAction","formContent","noValidate","autoComplete","TextField","addEpisodesFilterAction","findEpisode","addEpisodesDateAction","findDate","table","headRow","newEpisodes","addNewEpisodeReducer","episodesName","addEpisodesNameReducer","addEpisodesFilterReducer","addEpisodesDateReducer","TableContainer","Paper","Table","row","weight","TableHead","TableBody","toLowerCase","includes","air_date","created","characters","cell","LocationTableRow","dimension","addNewLocationsAction","newLocations","body","addNewLocationReducer","NewWatchTableRow","Checkbox","checkWatchItem","date","MyWatch","clearIdMas","setState","idMas","window","reload","_idMas","push","remoteWatchItemOnClick","i","localStorage","length","key","removeItem","changeState","newRow","JSON","parse","getItem","_watchList","watchList","handleOnSubmit","Math","floor","random","setItem","stringify","bind","this","onSubmit","Component","Home","img","Navbar","to","App","path","Characters","Episodes","Location","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1fa0b6f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        background: \"white\",\r\n        border: \"solid 1px red\",\r\n        borderBottom: \"solid 3px red\",\r\n        boxShadow: \"inset 0 0 0 1px #939393\",\r\n        color: \"red\",\r\n        textShadow: \"0 1px 0 #2f2f2f\"\r\n    },\r\n    image: {\r\n        marginLeft: \"40px\",\r\n        marginRight: \"20px\",\r\n        height: \"350px\",\r\n        width: \"350px\"\r\n    },\r\n    dialog: {\r\n        width: \"440px\",\r\n    },\r\n    ul_list: {\r\n        listStyleType: \"none\",\r\n\r\n    }\r\n});\r\nconst CharacterCardAction = (props) => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    return (\r\n        <div>\r\n            <CardActions>\r\n                <Button size=\"small\" color=\"primary\" variant=\"outlined\" onClick={handleClickOpen}\r\n                        className={classes.root}>\r\n                    More\r\n                </Button>\r\n            </CardActions>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"customized-dialog-title\">\r\n                <DialogTitle id=\"customized-dialog-title\">{props.name}</DialogTitle>\r\n                <form>\r\n                    <DialogContent className={classes.dialog}>\r\n                        <img className={classes.image} src={props.image} alt={props.name}/>\r\n                        <ul className={classes.ul_list}>\r\n                            <li>Species: {props.species}</li>\r\n                            <li>Gender: {props.gender}</li>\r\n                            <li>Type: {props.type}</li>\r\n                            <li>Status: {props.status}</li>\r\n                            <li>Origin: {props.origin}</li>\r\n                            <li>Location: {props.location}</li>\r\n                        </ul>\r\n\r\n\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\">Cancel</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\nexport default CharacterCardAction;","import React from 'react';\r\nimport './SomeCharacter.scss';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CharacterCardAction from \"./CharacterCardAction/CharacterCardAction\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 350,\r\n        opacity: 0.9,\r\n\r\n    },\r\n    media: {\r\n        height: 250,\r\n    },\r\n});\r\nconst SomeCharacter = (props) => {\r\n    const classes = useStyles();\r\n        return (\r\n            <div className='someCharacter-content'>\r\n            <Card className={classes.root}>\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        image={props.image}\r\n                        title={props.name}\r\n                    />\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            {props.name}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\r\n                            <ul className='character-info'>\r\n                                <li>species: {props.species}</li>\r\n                                <li>status: {props.status}</li>\r\n                                <li>gender: {props.gender}</li>\r\n                            </ul>\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n                <CharacterCardAction id={props.id}\r\n                                     name={props.name}\r\n                                     species={props.species}\r\n                                     status={props.status}\r\n                                     gender={props.gender}\r\n                                     image={props.image}\r\n                                     origin={props.origin}\r\n                                     type={props.type}\r\n                                     location={props.location}\r\n                />\r\n            </Card>\r\n            </div>\r\n\r\n        )\r\n\r\n}\r\nexport default SomeCharacter;","export const ADD_SOME_CHARACTER = 'ADD_SOME_CHARACTER';\r\nexport const ADD_NEW_EPISODE = 'ADD_NEW_EPISODE';\r\nexport const ADD_NEW_LOCATION = 'ADD_NEW_LOCATION';\r\nexport const ADD_SELECTED_GENDER = 'ADD_SELECTED_GENDER';\r\nexport const ADD_SELECTED_SPECIES = 'ADD_SELECTED_SPECIES';\r\nexport const ADD_SELECTED_STATUS = 'ADD_SELECTED_STATUS';\r\nexport const ADD_EPISODES_NAME = 'ADD_EPISODES_NAME';\r\nexport const ADD_EPISODES_FILTER = 'ADD_EPISODES_FILTER';\r\nexport const ADD_EPISODES_DATE = 'ADD_EPISODES_DATE';","import {ADD_SOME_CHARACTER} from \"../types\";\r\n\r\nconst addSomeCharacterAction = (someCharacter) => {\r\n    return {\r\n        type: ADD_SOME_CHARACTER,\r\n        payload: someCharacter\r\n    }\r\n}\r\n\r\nexport default addSomeCharacterAction;","import {ADD_SELECTED_GENDER} from \"../types\";\r\n\r\nconst addSelectedGenderAction = (gender) => {\r\n    return {\r\n        type: ADD_SELECTED_GENDER,\r\n        payload: gender\r\n    }\r\n}\r\n\r\nexport default addSelectedGenderAction;","import {ADD_SELECTED_SPECIES} from \"../types\";\r\n\r\nconst addSelectedSpeciesAction = (species) => {\r\n    return {\r\n        type: ADD_SELECTED_SPECIES,\r\n        payload: species\r\n    }\r\n}\r\n\r\nexport default addSelectedSpeciesAction;","import {ADD_SELECTED_STATUS} from \"../types\";\r\n\r\nconst addSelectedStatusAction = (status) => {\r\n    return {\r\n        type: ADD_SELECTED_STATUS,\r\n        payload: status\r\n    }\r\n}\r\n\r\nexport default addSelectedStatusAction;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport addSelectedGenderAction from \"../../../Redux/actions/add-selected-gender-action\";\r\nimport addSelectedSpeciesAction from \"../../../Redux/actions/add-selected-species-action\";\r\nimport addSelectedStatusAction from \"../../../Redux/actions/add-selected-status-action\";\r\n\r\nconst useStyles = makeStyles(()=>({\r\n    formControl: {\r\n        marginLeft: '100px',\r\n        width: '250px',\r\n        border: '2px solid red',\r\n        borderRadius: '5px',\r\n        backgroundColor: \"lightblue\",\r\n        color:'green',\r\n        opacity: '0.7'\r\n    },\r\n    form: {\r\n        padding: '20px 175px',\r\n    },\r\n    label: {\r\n        color: \"red\",\r\n        fontWeight: \"bold\",\r\n        fontSize: \"1.3em\",\r\n    },\r\n    option: {\r\n        color: 'red',\r\n    }\r\n}))\r\nconst FormSelected = ({addSelectedGenderAction, addSelectedSpeciesAction, addSelectedStatusAction}) => {\r\n    const classes = useStyles();\r\n    const handleGenderOnChange = (e) => {\r\n        e.preventDefault();\r\n        console.log(e.target.value);\r\n        addSelectedGenderAction(e.target.value);\r\n    }\r\n    const handleSpeciesOnChange = (e) => {\r\n        e.preventDefault();\r\n        console.log(e.target.value);\r\n        addSelectedSpeciesAction(e.target.value);\r\n    }\r\n    const handleStatusOnChange = (e) => {\r\n        e.preventDefault();\r\n        addSelectedStatusAction(e.target.value);\r\n    }\r\n    return(\r\n        <form className={classes.form}>\r\n            <FormControl onChange={handleGenderOnChange} variant=\"filled\" color='secondary' className={classes.formControl}>\r\n                <InputLabel className={classes.label}>Gender</InputLabel>\r\n                <Select native color='secondary' label=\"Gender\">\r\n                    <option className={classes.option} aria-label=\"None\" value=\"\"/>\r\n                    <option className={classes.option} value='Male'>Male</option>\r\n                    <option className={classes.option} value='Female'>Female</option>\r\n                    <option className={classes.option} value='unknown'>unknown</option>\r\n                </Select>\r\n            </FormControl>\r\n            <FormControl onChange={handleSpeciesOnChange} variant=\"filled\" color='secondary' className={classes.formControl}>\r\n                <InputLabel className={classes.label}>Species</InputLabel>\r\n                <Select native color='secondary' label=\"Gender\">\r\n                    <option className={classes.option} aria-label=\"None\" value=\"\"/>\r\n                    <option className={classes.option} value='Human'>Human</option>\r\n                    <option className={classes.option} value='Alien'>Alien</option>\r\n                </Select>\r\n            </FormControl>\r\n            <FormControl onChange={handleStatusOnChange} variant=\"filled\" color='secondary' className={classes.formControl}>\r\n                <InputLabel className={classes.label}>Status</InputLabel>\r\n                <Select native color='secondary' label=\"Gender\">\r\n                    <option className={classes.option} aria-label=\"None\" value=\"\"/>\r\n                    <option className={classes.option} value='Alive'>Alive</option>\r\n                    <option className={classes.option} value='Dead'>Dead</option>\r\n                    <option className={classes.option} value='unknown'>Unknown</option>\r\n\r\n                </Select>\r\n            </FormControl>\r\n        </form>\r\n    )\r\n}\r\nconst getStateToProps = (state) => {\r\n    return {\r\n        gender: state.addSelectedGenderReducer,\r\n        species: state.addSelectedSpeciesReducer,\r\n        status: state.addSelectedStatusReducer\r\n    }\r\n}\r\nexport default connect(getStateToProps, {addSelectedGenderAction, addSelectedSpeciesAction, addSelectedStatusAction})(FormSelected);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport axios from 'axios';\r\nimport SomeCharacter from \"./SomeCharacter/SomeCharacter\";\r\nimport addSomeCharacterAction from \"../../Redux/actions/add-some-character-action\";\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport './characters.scss';\r\nimport FormSelected from \"./FormSelected/FormSelected\";\r\n\r\nconst Characters = ({someCharacters, gender, species, status, addSomeCharacterAction}) => {\r\n    axios.get(\"https://rickandmortyapi.com/api/character/\").then(response => {\r\n        addSomeCharacterAction(response.data.results);\r\n    })\r\n    return (\r\n        <div className='characters-content'>\r\n            <FormSelected/>\r\n            {someCharacters.filter(item => (item.species === species||species==='')).filter(item=> item.gender === gender||gender==='').\r\n            filter(item=>item.status===status||status==='').map(item => {\r\n                return (\r\n                    <SomeCharacter id={item.id}\r\n                                   image={item.image}\r\n                                   name={item.name}\r\n                                   species={item.species}\r\n                                   gender={item.gender}\r\n                                   status={item.status}\r\n                                   origin={item.origin.name}\r\n                                   type={item.type}\r\n                                   location={item.location.name}\r\n                    />\r\n                )\r\n            })}\r\n            <Pagination count={5} color=\"primary\"/>\r\n        </div>\r\n    )\r\n}\r\nconst getStateToProps = (state) => {\r\n    return {\r\n        someCharacters: state.addSomeCharacterReducer,\r\n        gender: state.addSelectedGenderReducer,\r\n        species: state.addSelectedSpeciesReducer,\r\n        status: state.addSelectedStatusReducer\r\n    }\r\n}\r\n\r\nexport default connect(getStateToProps, {addSomeCharacterAction})(Characters);","import {ADD_NEW_EPISODE} from \"../types\";\r\n\r\nconst addNewEpisodeAction = (newEpisode) => {\r\n    return {\r\n        type: ADD_NEW_EPISODE,\r\n        payload: newEpisode\r\n    }\r\n}\r\n\r\nexport default addNewEpisodeAction;","import React from \"react\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n\r\n\r\nconst EpisodeTableRow = (props) => {\r\n    return (\r\n        <TableRow>\r\n            <TableCell align=\"center\">{props.name}</TableCell>\r\n            <TableCell align=\"center\">{props.episode}</TableCell>\r\n            <TableCell align=\"center\">{props.airDate}</TableCell>\r\n\r\n        </TableRow>\r\n\r\n    )\r\n}\r\n\r\nexport default EpisodeTableRow;","import {ADD_EPISODES_NAME} from \"../types\";\r\n\r\nconst addEpisodesNameAction = (name) => {\r\n    return {\r\n        type: ADD_EPISODES_NAME,\r\n        payload: name\r\n    }\r\n}\r\nexport default addEpisodesNameAction;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {FormControl} from \"@material-ui/core\";\r\nimport addEpisodesNameAction from \"../../../Redux/actions/add-episodes-name-action\";\r\nconst useStyles = makeStyles({\r\n    formContent: {\r\n        color: \"orange\",\r\n        fontSize: '1.2em',\r\n        fontWeight: \"bold\"\r\n    }\r\n})\r\nconst FormFilterNameEpisode = ({addEpisodesNameAction}) => {\r\n    const classes = useStyles();\r\n    const handleOnChangeName = (e) => {\r\n        addEpisodesNameAction(e.target.value);\r\n    }\r\n    return (\r\n        <form className={classes.formContent}>\r\n            <FormControl onChange = {handleOnChangeName} noValidate autoComplete=\"off\">\r\n                <TextField id=\"outlined-search\" size='small' color='secondary' type=\"search\" variant=\"outlined\"/>\r\n            </FormControl>\r\n        </form>\r\n    )\r\n}\r\nexport default connect(null, {addEpisodesNameAction})(FormFilterNameEpisode);","import {ADD_EPISODES_FILTER} from \"../types\";\r\n\r\nconst addEpisodesFilterAction = (findEpisode) => {\r\n    return {\r\n        type: ADD_EPISODES_FILTER,\r\n        payload: findEpisode\r\n    }\r\n}\r\n\r\nexport default addEpisodesFilterAction;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {FormControl} from \"@material-ui/core\";\r\nimport addEpisodesFilterAction from \"../../../Redux/actions/add-episodes-filter-action\";\r\n\r\nconst useStyles = makeStyles({\r\n    formContent: {\r\n        color: \"orange\",\r\n        fontSize: '1.2em',\r\n        fontWeight: \"bold\"\r\n    }\r\n})\r\nconst FormFilterEpisode = ({addEpisodesFilterAction}) => {\r\n    const classes = useStyles();\r\n    const handleOnChangeName = (e) => {\r\n        addEpisodesFilterAction(e.target.value);\r\n    }\r\n    return (\r\n        <form className={classes.formContent}>\r\n            <FormControl onChange = {handleOnChangeName} noValidate autoComplete=\"off\">\r\n                <TextField id=\"outlined-search\" size='small' color='secondary' type=\"search\" variant=\"outlined\"/>\r\n            </FormControl>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default connect(null, {addEpisodesFilterAction})(FormFilterEpisode);","import {ADD_EPISODES_DATE} from \"../types\";\r\n\r\nconst addEpisodesDateAction = (findDate) => {\r\n    return {\r\n        type: ADD_EPISODES_DATE,\r\n        payload: findDate\r\n    }\r\n}\r\n\r\nexport default addEpisodesDateAction;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {FormControl} from \"@material-ui/core\";\r\nimport addEpisodesDateAction from \"../../../Redux/actions/add-episodes-date-action\";\r\n\r\nconst useStyles = makeStyles({\r\n    formContent: {\r\n        color: \"orange\",\r\n        fontSize: '1.2em',\r\n        fontWeight: \"bold\"\r\n    }\r\n})\r\nconst FormFilterDateEpisode = ({addEpisodesDateAction}) => {\r\n    const classes = useStyles();\r\n    const handleOnChangeName = (e) => {\r\n        addEpisodesDateAction(e.target.value);\r\n    }\r\n    return (\r\n        <form className={classes.formContent}>\r\n            <FormControl onChange = {handleOnChangeName} noValidate autoComplete=\"off\">\r\n                <TextField id=\"outlined-search\" size='small' color='secondary' type=\"search\" variant=\"outlined\"/>\r\n            </FormControl>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default connect(null, {addEpisodesDateAction})(FormFilterDateEpisode);","import React from 'react';\r\nimport axios from \"axios\";\r\nimport {connect} from 'react-redux'\r\nimport './episodes.scss';\r\nimport addNewEpisodeAction from \"../../Redux/actions/add-new-episode-action\";\r\nimport EpisodeTableRow from \"./EpisodeTableRow/EpisodeTableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport FormFilterNameEpisode from \"./FormFilterNameEpisode/FormFilterNameEpisode\";\r\nimport FormFilterEpisode from \"./FormFilterEpisode/FormFilterEpisode\";\r\nimport FormFilterDateEpisode from \"./FormFilterDateEpisode/FormFilterDateEpisode\";\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        width: 850,\r\n        opacity: 0.8,\r\n        backgroundColor: \"lightyellow\"\r\n\r\n    },\r\n    headRow: {\r\n        color: \"orange\",\r\n        fontSize: '1.2em',\r\n        fontWeight: \"bold\"\r\n\r\n    },\r\n    \r\n});\r\n\r\nconst Episodes = ({newEpisodes, episodesName, findEpisode, findDate, addNewEpisodeAction}) => {\r\n    axios.get(\"https://rickandmortyapi.com/api/episode/\").then(response => {\r\n        addNewEpisodeAction(response.data.results);\r\n            })\r\n    const classes = useStyles();\r\n        return(\r\n            <div className='episodes-content'>\r\n                <TableContainer className={classes.table} component={Paper}>\r\n                    <Table  className={classes.row} weight=\"bold\" size=\"small\" aria-label=\"a dense table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\" className={classes.headRow}>\r\n                                    Name\r\n                                    <FormFilterNameEpisode />\r\n                                </TableCell>\r\n                                <TableCell align=\"center\" className={classes.headRow}>\r\n                                    Episode\r\n                                    <FormFilterEpisode />\r\n                                </TableCell>\r\n                                <TableCell align=\"center\" className={classes.headRow}>\r\n                                    Air-Date\r\n                                    <FormFilterDateEpisode/>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {newEpisodes.filter(item=>item.name.toLowerCase().includes(episodesName) || episodesName==='').\r\n                            filter(item=>item.episode.toLowerCase().includes(findEpisode)).\r\n                            filter(item=>item.air_date.toLowerCase().includes(findDate)).map(item => {\r\n                                console.log(item.name);\r\n                                return (\r\n                                    <EpisodeTableRow id={item.id}\r\n                                                     episode={item.episode}\r\n                                                     name={item.name}\r\n                                                     airDate={item.air_date}\r\n                                                     created={item.created}\r\n                                                     characters={item.characters}\r\n                                    />\r\n                                )\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>\r\n        )\r\n\r\n}\r\nconst getStateToProps = (state) => {\r\n    return {\r\n        newEpisodes: state.addNewEpisodeReducer,\r\n        episodesName: state.addEpisodesNameReducer,\r\n        findEpisode: state.addEpisodesFilterReducer,\r\n        findDate: state.addEpisodesDateReducer\r\n    }\r\n}\r\n\r\nexport default connect(getStateToProps, {addNewEpisodeAction})(Episodes);","import React from 'react';\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nconst useStyles = makeStyles({\r\n    cell: {\r\n        color: \"green\",\r\n        fontWeight: \"bold\"\r\n    }\r\n});\r\nconst LocationTableRow = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <TableRow >\r\n            <TableCell className={classes.cell} align=\"center\">{props.name}</TableCell>\r\n            <TableCell className={classes.cell} align=\"center\">{props.type}</TableCell>\r\n            <TableCell className={classes.cell} align=\"center\">{props.dimension}</TableCell>\r\n            <TableCell className={classes.cell} align=\"center\">{props.created}</TableCell>\r\n        </TableRow>\r\n    )\r\n}\r\n\r\nexport default LocationTableRow;","import {ADD_NEW_LOCATION} from \"../types\";\r\n\r\nconst addNewLocationsAction = (newLocations) => {\r\n    return {\r\n        type: ADD_NEW_LOCATION,\r\n        payload: newLocations\r\n    }\r\n}\r\n\r\nexport default addNewLocationsAction;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './location.scss';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport axios from \"axios\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport LocationTableRow from \"./LocationTableRow/LocationTableRow\";\r\nimport addNewLocationsAction from \"../../Redux/actions/add-new-location-action\";\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        width: 850,\r\n        opacity: 0.8,\r\n        backgroundColor: \"lightyellow\"\r\n\r\n    },\r\n    headRow: {\r\n        color: \"red\",\r\n        fontSize: '1.2em',\r\n        fontWeight: \"bold\"\r\n    },\r\n    body: {\r\n        color: \"red\",\r\n        fontWeight: \"bold\"\r\n    }\r\n});\r\nconst Location = ({newLocations, addNewLocationsAction}) => {\r\n    axios.get(\"https://rickandmortyapi.com/api/location/\").then(response => {\r\n        addNewLocationsAction(response.data.results);\r\n        console.log(response.data.results);\r\n    })\r\n    const classes = useStyles();\r\n        return (\r\n            <div className='location-content'>\r\n                <TableContainer className={classes.table} component={Paper}>\r\n                    <Table className={classes.row} weight=\"bold\" size=\"small\" aria-label=\"a dense table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\" className={classes.headRow}>Name</TableCell>\r\n                                <TableCell align=\"center\" className={classes.headRow}>Type</TableCell>\r\n                                <TableCell align=\"center\" className={classes.headRow}>Dimension</TableCell>\r\n                                <TableCell align=\"center\" className={classes.headRow}>Created</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody >\r\n                            {newLocations.map(item => {\r\n                                return (\r\n                                    <LocationTableRow id={item.id}\r\n                                                      name={item.name}\r\n                                                      type={item.type}\r\n                                                      dimension={item.dimension}\r\n                                                      created={item.created}\r\n                                    />\r\n                                )\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>\r\n        )\r\n}\r\nconst getStateToProps = (state) => {\r\n    return {\r\n        newLocations: state.addNewLocationReducer\r\n    }\r\n}\r\nexport default connect(getStateToProps, {addNewLocationsAction})(Location);","import React from \"react\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport './newWatchTableRow.scss';\r\n\r\nconst NewWatchTableRow = (props) => {\r\n    const handleOnClick = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        props.checkWatchItem(e.target.id);\r\n    }\r\n    return (\r\n        <TableRow className='table-row' color='red'>\r\n            <Checkbox onClick={handleOnClick}\r\n                      className=\"text-field\"\r\n                      id={props.id}\r\n                      name=\"check\"\r\n                      color=\"secondary\"\r\n                      align=\"center\"\r\n            />\r\n            <TableCell  align=\"center\">{props.name}</TableCell>\r\n            <TableCell  align=\"center\">{props.episode}</TableCell>\r\n            <TableCell  align=\"center\">{props.date}</TableCell>\r\n\r\n        </TableRow>\r\n    )\r\n}\r\nexport default NewWatchTableRow;","import React, {Component} from 'react';\r\nimport './myWatch.scss';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport 'fontsource-roboto';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport NewWatchTableRow from \"./NewWatchTableRow/NewWatchTableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\n\r\nclass MyWatch extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idMas: [],\r\n            watchList: []\r\n        }\r\n        this.checkWatchItem = this.checkWatchItem.bind(this);\r\n        this.remoteWatchItemOnClick = this.remoteWatchItemOnClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.changeState();\r\n        this.checkWatchItem();\r\n    }\r\n\r\n    clearIdMas = () => {\r\n        this.setState({idMas: []});\r\n        window.location.reload();\r\n    }\r\n\r\n    checkWatchItem = (id) => {\r\n        let _idMas = this.state.idMas;\r\n        _idMas.push(id);\r\n        this.setState({idMas: _idMas});\r\n    }\r\n    remoteWatchItemOnClick = () => {\r\n        for (let i = 0; i < localStorage.length; i++) {\r\n            if (this.state.idMas.includes(localStorage.key(i))) {\r\n                localStorage.removeItem(`${localStorage.key(i)}`);\r\n            }\r\n        }\r\n        this.clearIdMas();\r\n    }\r\n\r\n    changeState = () => {\r\n        for (let i = 0; i < localStorage.length; i++) {\r\n            let newRow = JSON.parse(localStorage.getItem(`${localStorage.key(i)}`));\r\n            let _watchList = this.state.watchList;\r\n            _watchList.push(newRow)\r\n            this.setState({watchList: _watchList});\r\n        }\r\n    }\r\n    handleOnSubmit = (e) => {\r\n        e.preventDefault();\r\n        const newRow = {\r\n            id: Math.floor(Math.random() * 100),\r\n            name: e.target[0].value,\r\n            episode: e.target[2].value,\r\n            date: e.target[4].value,\r\n        };\r\n        console.log(newRow);\r\n        if (newRow.name || newRow.episode || newRow.date) {\r\n            localStorage.setItem(`${newRow.id}`, JSON.stringify(newRow));\r\n        }\r\n        e.target[0].value = '';\r\n        e.target[2].value = '';\r\n        e.target[4].value = '';\r\n        window.location.reload();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='myWatch-content'>\r\n                <InputLabel className='form-title'><h3>Add your new Episode of Rick&Morty film</h3></InputLabel>\r\n                <form className='font-content' noValidate autoComplete=\"off\" onSubmit={this.handleOnSubmit}>\r\n                    <TextField\r\n                        className=\"text-field\"\r\n                        id=\"name\"\r\n                        label=\"Name\"\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                    />\r\n                    <TextField\r\n                        className=\"text-field\"\r\n                        id=\"episode\"\r\n                        label=\"Episode\"\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                    />\r\n                    <TextField\r\n                        className=\"text-field\"\r\n                        id=\"date\"\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                        type=\"date\"\r\n                    />\r\n                    <Button type='submit' variant=\"contained\" color=\"secondary\">Add new Watch</Button>\r\n                </form>\r\n                < div className='table-content'>\r\n                    <TableContainer component={Paper}>\r\n                        <Table aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell className='head-row' align=\"center\"> </TableCell>\r\n                                    <TableCell className='head-row' align=\"center\">Name</TableCell>\r\n                                    <TableCell className='head-row' align=\"center\">Episode</TableCell>\r\n                                    <TableCell className='head-row' align=\"center\">Date</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody className='body-content' color='red'>\r\n                                {this.state.watchList.map(item => {\r\n                                    return (\r\n                                        <NewWatchTableRow\r\n                                            id={item.id}\r\n                                            name={item.name}\r\n                                            episode={item.episode}\r\n                                            date={item.date}\r\n                                            checkWatchItem={this.checkWatchItem}\r\n                                        />\r\n                                    )\r\n                                })}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </div>\r\n                <Button onClick={this.remoteWatchItemOnClick} variant=\"contained\" color=\"secondary\" size=\"large\"\r\n                        className='remote-button'>Remove</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyWatch;","export default __webpack_public_path__ + \"static/media/rickAndMorty3.29df0783.png\";","export default __webpack_public_path__ + \"static/media/rick-title.ae6cc7b2.png\";","import React from 'react';\r\nimport './home.scss';\r\nimport img from '../../image/rickAndMorty3.png';\r\nimport title from '../../image/rick-title.png';\r\nconst Home = () => {\r\n    return(\r\n        <div className='home-content'>\r\n            <img className='title' src={title} alt='Rick and Morty'/>\r\n            <img className='rick-morty-image' src={img} alt='Rick&Morty'/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport './Navbar.scss'\r\n\r\nconst Navbar = () => {\r\n    return(\r\n        <div className='navbar-wrapper'>\r\n            <div><NavLink className='nav' to='/home'>Home</NavLink></div>\r\n            <div><NavLink className='nav' to='/characters'>Characters</NavLink></div>\r\n            <div><NavLink className='nav' to='/episodes'>Episodes</NavLink></div>\r\n            <div><NavLink className='nav' to='/location'>Location</NavLink></div>\r\n            <div><NavLink className='nav' to='/mywatch'>My watch</NavLink></div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import {BrowserRouter, NavLink, Route} from \"react-router-dom\";\nimport './App.css';\nimport Characters from \"./components/Characters/Characters\";\nimport Episodes from \"./components/Episodes/Episodes\";\nimport Location from \"./components/Location/Location\";\nimport MyWatch from \"./components/My watch/MyWatch\";\nimport Home from \"./components/Home/Home\";\nimport Navbar from \"./components/Navbar/Navbar\";\n\nfunction App() {\n    return (\n        <div className='app-wrapper'>\n            <BrowserRouter>\n                <Navbar/>\n                <div className='content'>\n                    <Route path='/characters' component={Characters}/>\n                    <Route path='/episodes' component={Episodes}/>\n                    <Route path='/location' component={Location}/>\n                    <Route path='/mywatch' component={MyWatch}/>\n                    <Route path='/home' component={Home}/>\n                    <Route path='/' component={Home}/>\n                </div>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {ADD_SOME_CHARACTER} from \"../types\";\r\n\r\nconst initialState = {\r\n    data: {\r\n        results: []\r\n    }\r\n\r\n}\r\nexport const addSomeCharacterReducer = (state=initialState.data.results, action) => {\r\n    switch (action.type) {\r\n        case ADD_SOME_CHARACTER:\r\n            return action.payload\r\n    }\r\n    return state;\r\n}","import {ADD_NEW_EPISODE} from \"../types\";\r\n\r\nconst initialState = {\r\n    data: {\r\n        results: []\r\n    }\r\n}\r\n\r\nexport const addNewEpisodeReducer = (state=initialState.data.results, action) => {\r\n    switch (action.type) {\r\n        case ADD_NEW_EPISODE:\r\n            return action.payload\r\n    }\r\n    return state;\r\n}","import {ADD_NEW_LOCATION} from \"../types\";\r\nconst initialState = {\r\n    data: {\r\n        results: []\r\n    }\r\n}\r\nexport const addNewLocationReducer = (state=initialState.data.results, action) => {\r\n    switch (action.type) {\r\n        case ADD_NEW_LOCATION:\r\n            return action.payload\r\n    }\r\n    return state;\r\n}","import thunk from 'redux-thunk';\r\nimport {createStore, applyMiddleware, combineReducers} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport {addSomeCharacterReducer} from \"../Redux/reducers/add-some-character-reducer\";\r\nimport {addNewEpisodeReducer} from \"../Redux/reducers/add-new-episode-reducer\";\r\nimport {addNewLocationReducer} from \"../Redux/reducers/add-new-location-reducer\";\r\nimport {addSelectedGenderReducer} from \"../Redux/reducers/add-selected-gender-reducer\";\r\nimport {addSelectedSpeciesReducer} from \"../Redux/reducers/add-selected-species-reducer\";\r\nimport {addSelectedStatusReducer} from \"../Redux/reducers/add-selected-status-reducer\";\r\nimport {addEpisodesNameReducer} from \"../Redux/reducers/add-episodes-name-reducer\";\r\nimport {addEpisodesFilterReducer} from \"../Redux/reducers/add-episodes-filter-reducer\";\r\nimport {addEpisodesDateReducer} from \"../Redux/reducers/add-episodes-date-reducer\";\r\n\r\nconst reducer = combineReducers({\r\n    addSomeCharacterReducer,\r\n    addNewEpisodeReducer,\r\n    addNewLocationReducer,\r\n    addSelectedGenderReducer,\r\n    addSelectedSpeciesReducer,\r\n    addSelectedStatusReducer,\r\n    addEpisodesNameReducer,\r\n    addEpisodesFilterReducer,\r\n    addEpisodesDateReducer\r\n})\r\nconst store = createStore(\r\n    reducer,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n)\r\nconsole.log(store.getState());\r\nexport default store;","import {ADD_SELECTED_GENDER} from \"../types\";\r\n\r\nexport const addSelectedGenderReducer = (state = '', action) => {\r\n    switch(action.type) {\r\n        case ADD_SELECTED_GENDER:\r\n            return action.payload\r\n    }\r\n    return state;\r\n}","import {ADD_SELECTED_SPECIES} from \"../types\";\r\n\r\nexport const addSelectedSpeciesReducer = (state='', action) => {\r\n    switch (action.type) {\r\n        case ADD_SELECTED_SPECIES: {\r\n            return action.payload\r\n        }\r\n    }\r\n    return state;\r\n}","import {ADD_SELECTED_STATUS} from \"../types\";\r\n\r\nexport const addSelectedStatusReducer = (state = '', action) => {\r\n    switch (action.type) {\r\n        case ADD_SELECTED_STATUS: {\r\n            return action.payload;\r\n        }\r\n    }\r\n    return state;\r\n}","import {ADD_EPISODES_NAME} from \"../types\";\r\n\r\nexport const addEpisodesNameReducer = (state='', action) => {\r\n    switch (action.type) {\r\n        case ADD_EPISODES_NAME: {\r\n            return action.payload\r\n        }\r\n    }\r\n    return state;\r\n}","import {ADD_EPISODES_FILTER} from \"../types\";\r\n\r\nexport const addEpisodesFilterReducer = (state='', action) => {\r\n    switch (action.type) {\r\n        case ADD_EPISODES_FILTER: {\r\n            return action.payload;\r\n        }\r\n    }\r\n    return state;\r\n}","import {ADD_EPISODES_DATE} from \"../types\";\r\n\r\nexport const addEpisodesDateReducer = (state='', action) => {\r\n    switch (action.type) {\r\n        case ADD_EPISODES_DATE: {\r\n            return action.payload;\r\n        }\r\n    }\r\n    return state;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./store/store\";\nimport {Provider} from \"react-redux\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}